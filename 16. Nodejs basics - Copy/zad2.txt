Клиент - Сървър:
Клиента прави заявки към сървъра (request)
Сървъра обработва заявките и праща отговор (response)

HTTP - Hypertext Transfer Protocol
HTTP ни казва:
    - как изглеждат заявките (request)
    - как изглеждат отговорите (response)





HTTP заявка (REQUEST):
    HEAD
- МЕТОД: GET/POST/PUT/DELETE
- URL (към кой сървър правим заявката): http://9gag.com/images/kartof.png?name=gosho&age=23
    - протокол: http://
    - име на уебсайта: 9gag.com
    - път: /images/kartof.png
    - URL параметри: ?name=gosho&age=23
- HEADER-и (допълнителна информация за заявката)

    BODY/ PAYLOAD (товар)
- например някакъв файл
- може и да е празен

HTTP отговор (RESPONSE):
    HEAD
- Status Код: 200 ОК/ 404 Not Found/ 500 Server Error
- HEADER-и (допълнителна информация за отговора)

    BODY/ PAYLOAD (товар)
- например някакъв файл (какъвто си искаме)
- може и да е празен




ПРАВИМ ЗАЯВКА -> server.js обработва заявката и връща отговор -> получаване отговора

Как да setup-нем нашия сървър:
1. Инсталирайте nodejs, Postman. Nodejs ни дава командите node (изпълнява js код) и npm (инсталира чужди js пакети)
2. Създайте нова папка и в нея създайте файла server.js
3. Отворете CMD в папка, в която е server.js
4. Напишете командата:  npm init    (създава npm пакет)
                        npm install express     (инсталира пакета express)

5. Копирайте кода за server.js от: https://pastebin.com/ccMnjSpE
6. Стартирайте сървъра с командата:
                        node server.js
7. Ако променим server.js: спираме сървъра (CTRL + C) и го пускаме наново
(npm install -g nodemon)   nodemon server.js (това ще рестартира сървъра вместо вас)

ПРАВИМ r/place
Когато сървърът получи:                                     Ще връща отговор:
GET http://localhost:3000/map                               - 200 ОК + цялата таблица на игралното поле

PUT http://localhost:3000/place?X=2&Y=8&R=253&G=108&B=200
                                                            - 400 Bad Request - когато координатите са извън таблицата
                                                            - 400 Bad Request - когато цвета е неправилен 0 <= R,G,B <= 255
                                                            - 200 OK          - иначе (тука сървъра променя двумерния масив)
                                                            - отговора няма да има тяло


Домашна работа:
1. Има ограничение на броя на слагания:
    - потребителя се определя от неговия IP адрес
req.headers['x-forwarded-for'] || req.socket.remoteAddress 
    - след като един потребител направи PUt - той не може да направи PUT в следващите 20 секунди
Date.now();

2. При GET заявка към http://localhost:3000/ - пращаме start.html файла, който се намира в папката public
res.sendFile("ПЪТ КЪМ ФАЙЛА")

3. Добавете JS и CSS към start.html файла.

4. Напрвете си собствен ваш як HTTP сървър, който прави каквото искате:
- HTTP Url shortener
- HTTP .....
- HTTP BGMAFIA